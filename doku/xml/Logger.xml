<?xml version="1.0" encoding="utf-8"?>
<namespace name="Logger" platform="Win32">
  <class name="TLogFile" file="Logger.pas" line="12">
    <devnotes>
       <summary>Komfort-Funktionen zum Oeffnen von textfiles
       </summary>
    </devnotes>
    <ancestor name="TStreamWriter" namespace="System.Classes">
      <methodref name="WriteBytes" visibility="protected">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="Create" visibility="public" procflags="constructor overload">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Close" visibility="public" procflags="override">
      </methodref>
      <methodref name="Flush" visibility="public" procflags="override">
      </methodref>
      <methodref name="OwnStream" visibility="public" procflags="inline">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="Write" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <methodref name="WriteLine" visibility="public" procflags="overload override">
      </methodref>
      <propertyref name="AutoFlush" visibility="public">
      </propertyref>
      <propertyref name="NewLine" visibility="public">
      </propertyref>
      <propertyref name="Encoding" visibility="public">
      </propertyref>
      <propertyref name="BaseStream" visibility="public">
      </propertyref>
      <ancestor name="TTextWriter" namespace="System.Classes">
        <methodref name="Close" visibility="public" procflags="abstract virtual">
        </methodref>
        <methodref name="Flush" visibility="public" procflags="abstract virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="Write" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <methodref name="WriteLine" visibility="public" procflags="abstract overload virtual">
        </methodref>
        <ancestor name="TObject" namespace="System">
          <methodref name="Create" visibility="public" procflags="constructor">
          </methodref>
          <methodref name="Free" visibility="public">
          </methodref>
          <methodref name="DisposeOf" visibility="public" procflags="inline">
          </methodref>
          <methodref name="InitInstance" visibility="public" procflags="class">
          </methodref>
          <methodref name="CleanupInstance" visibility="public">
          </methodref>
          <methodref name="ClassType" visibility="public" procflags="inline">
          </methodref>
          <methodref name="ClassName" visibility="public" procflags="class">
          </methodref>
          <methodref name="ClassNameIs" visibility="public" procflags="class">
          </methodref>
          <methodref name="ClassParent" visibility="public" procflags="class">
          </methodref>
          <methodref name="ClassInfo" visibility="public" procflags="class inline">
          </methodref>
          <methodref name="InstanceSize" visibility="public" procflags="class inline">
          </methodref>
          <methodref name="InheritsFrom" visibility="public" procflags="class">
          </methodref>
          <methodref name="MethodAddress" visibility="public" procflags="class overload">
          </methodref>
          <methodref name="MethodAddress" visibility="public" procflags="class overload">
          </methodref>
          <methodref name="MethodName" visibility="public" procflags="class">
          </methodref>
          <methodref name="QualifiedClassName" visibility="public" procflags="class">
          </methodref>
          <methodref name="FieldAddress" visibility="public" procflags="overload">
          </methodref>
          <methodref name="FieldAddress" visibility="public" procflags="overload">
          </methodref>
          <methodref name="GetInterface" visibility="public">
          </methodref>
          <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
          </methodref>
          <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
          </methodref>
          <methodref name="UnitName" visibility="public" procflags="class">
          </methodref>
          <methodref name="UnitScope" visibility="public" procflags="class">
          </methodref>
          <methodref name="Equals" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetHashCode" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="ToString" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="SafeCallException" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="AfterConstruction" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="Dispatch" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="DefaultHandler" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="NewInstance" visibility="public" procflags="class virtual">
          </methodref>
          <methodref name="FreeInstance" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor virtual">
          </methodref>
          <methodref name="GetDisposed" visibility="protected" procflags="inline">
          </methodref>
          <methodref name="CheckDisposed" visibility="protected" procflags="inline">
          </methodref>
          <propertyref name="Disposed" visibility="protected">
          </propertyref>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="fullpath" type="string" visibility="private" size="4" offset="28" file="Logger.pas" line="14" />
      <procedure name="Open" visibility="private" file="Logger.pas" line="15">
        <parameters>
          <parameter name="filedir" type="string" />
          <parameter name="filename" type="string" />
          <parameter name="Append" type="Boolean" />
        </parameters>
      </procedure>
      <procedure name="OpenAppend" visibility="public" file="Logger.pas" line="17">
        <parameters>
          <parameter name="filedir" type="string" />
          <parameter name="filename" type="string" />
        </parameters>
      </procedure>
      <procedure name="OpenNew" visibility="public" file="Logger.pas" line="21">
        <devnotes>
          <summary>Oeffnet neue leere Datei </summary>
           <param name="filedir">Pfad ohne slash am Ende </param>
           <param name="filename">Dateiname ohne slash am Anfang</param>
        </devnotes>
        <parameters>
          <parameter name="filedir" type="string" />
          <parameter name="filename" type="string" />
        </parameters>
      </procedure>
      <destructor name="Destroy" visibility="public" file="Logger.pas" line="23">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="Log" visibility="public" file="Logger.pas" line="24">
        <parameters>
          <parameter name="msg" type="string" />
        </parameters>
      </procedure>
      <procedure name="Trennzeile" visibility="public" file="Logger.pas" line="25">
        <parameters>
          <parameter name="txt" type="string" />
          <parameter name="Anzahl" type="Integer" />
        </parameters>
      </procedure>
    </members>
  </class>
</namespace>
